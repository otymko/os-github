
Перем Идентификатор Экспорт; // id
Перем Имя Экспорт; // name
Перем ПолноеИмя Экспорт; // full_name
Перем Закрытий Экспорт; // private
Перем Пользователь Экспорт; // owner -> login
Перем Ссылка Экспорт; // url
Перем Описание Экспорт; // description
Перем ЭтоФорк Экспорт; // fork
Перем ДатаСоздания Экспорт; // created_at
Перем ДатаОбновления Экспорт; // updated_at
Перем ДатаПуша Экспорт; // pushed_at
Перем СсылкаHTML Экспорт; // html_url
Перем СсылкаGit Экспорт; // git_url
Перем СсылкаSSH Экспорт; // ssh_url
Перем Размер Экспорт; // size
Перем Язык Экспорт; // language
Перем Лицензия Экспорт; // license -> name
Перем Форки Экспорт; // forks_count
Перем ВеткаПоУмолчания Экспорт; // default_branch
Перем Архивный Экспорт; //archived

Процедура ПриСозданииОбъекта(пПолноеИмя = "")

	Если ЗначениеЗаполнено(пПолноеИмя) Тогда
		ПолноеИмя = пПолноеИмя;
	КонецЕсли;

КонецПроцедуры

Процедура Заполнить(ВходящиеДанные) Экспорт

	Если ТипЗнч(ВходящиеДанные) = Тип("Соответствие") Тогда
		Идентификатор = ВходящиеДанные.Получить("id");
		Имя = ВходящиеДанные.Получить("name");
		ПолноеИмя = ВходящиеДанные.Получить("full_name");
		Закрытий = ВходящиеДанные.Получить("private");
		Владелец = ВходящиеДанные.Получить("owner");
		Если ЗначениеЗаполнено(Владелец) Тогда
			Пользователь = Новый ПользовательGitHub(Владелец.Получить("login"));
		КонецЕсли;
		Ссылка = ВходящиеДанные.Получить("url");
		СсылкаHTML = ВходящиеДанные.Получить("html_url");
		Описание = ВходящиеДанные.Получить("description");
		ЭтоФорк = ВходящиеДанные.Получить("fork");
		ДатаСоздания = ВходящиеДанные.Получить("created_at");
		ДатаОбновления = ВходящиеДанные.Получить("updated_at");
		ДатаПуша = ВходящиеДанные.Получить("pushed_at");
		СсылкаGit = ВходящиеДанные.Получить("git_url");
		СсылкаSSH = ВходящиеДанные.Получить("ssh_url");
		Размер = ВходящиеДанные.Получить("size");
		Язык = ВходящиеДанные.Получить("language");
		Лицензия = ВходящиеДанные.Получить("license");
		Если ЗначениеЗаполнено(Лицензия) Тогда
			Лицензия = Лицензия.Получить("name");
		КонецЕсли;
		Форки = ВходящиеДанные.Получить("forks_count"); 
		ВеткаПоУмолчания = ВходящиеДанные.Получить("default_branch");
		Архивный = ВходящиеДанные.Получить("archived");

	КонецЕсли;

КонецПроцедуры